# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mq.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='mq.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x08mq.proto\"\x14\n\x05Login\x12\x0b\n\x03uid\x18\x01 \x01(\x03\"\x15\n\x06Logout\x12\x0b\n\x03uid\x18\x01 \x01(\x03\"\x14\n\x05\x41larm\x12\x0b\n\x03tip\x18\x01 \x01(\tb\x06proto3'
)




_LOGIN = _descriptor.Descriptor(
  name='Login',
  full_name='Login',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='uid', full_name='Login.uid', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12,
  serialized_end=32,
)


_LOGOUT = _descriptor.Descriptor(
  name='Logout',
  full_name='Logout',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='uid', full_name='Logout.uid', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=34,
  serialized_end=55,
)


_ALARM = _descriptor.Descriptor(
  name='Alarm',
  full_name='Alarm',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='tip', full_name='Alarm.tip', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=57,
  serialized_end=77,
)

DESCRIPTOR.message_types_by_name['Login'] = _LOGIN
DESCRIPTOR.message_types_by_name['Logout'] = _LOGOUT
DESCRIPTOR.message_types_by_name['Alarm'] = _ALARM
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Login = _reflection.GeneratedProtocolMessageType('Login', (_message.Message,), {
  'DESCRIPTOR' : _LOGIN,
  '__module__' : 'mq_pb2'
  # @@protoc_insertion_point(class_scope:Login)
  })
_sym_db.RegisterMessage(Login)

Logout = _reflection.GeneratedProtocolMessageType('Logout', (_message.Message,), {
  'DESCRIPTOR' : _LOGOUT,
  '__module__' : 'mq_pb2'
  # @@protoc_insertion_point(class_scope:Logout)
  })
_sym_db.RegisterMessage(Logout)

Alarm = _reflection.GeneratedProtocolMessageType('Alarm', (_message.Message,), {
  'DESCRIPTOR' : _ALARM,
  '__module__' : 'mq_pb2'
  # @@protoc_insertion_point(class_scope:Alarm)
  })
_sym_db.RegisterMessage(Alarm)


# @@protoc_insertion_point(module_scope)
